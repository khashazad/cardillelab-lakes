services:
  database:
    build: .
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - lakes-data:/data/db
      - type: bind
        source: ${PATH_DB_LOGS}
        target: /data/log
    networks:
      lakes:
        ipv4_address: 10.5.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASS}

  server:
    build: ./server
    ports:
      - "4000:4000"
    networks:
      lakes:
        ipv4_address: 10.5.0.3
    depends_on:
      - redis
      - database
    environment:
      REDIS_HOST: 10.5.0.4
      REDIS_PORT: 6379
      MONGO_URI: "mongodb://${MONGO_ADMIN_USER}:${MONGO_ADMIN_PASS}@10.5.0.2:27017"
      DATABASE: ${MONGO_DATABASE}

    volumes:
      - type: bind
        source: ${PATH_EXPORTS}
        target: /tmp
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      lakes:
        ipv4_address: 10.5.0.4
  client:
    build: ./client
    ports:
      - "3000:3000"
    networks:
      lakes:
        ipv4_address: 10.5.0.5
    depends_on:
      - database
      - server
    environment:
      MONGODB_URI: "mongodb://lakesadmin:lakeharvest2021@10.5.0.2:27017"
      API_URI: "http://10.5.0.3:4000"
  # nginx:
  #   build: ./nginx
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - redis
  #     - client
  #     - server
  #     - database
  #   networks:
  #     lakes:
  #       ipv4_address: 10.5.0.6
networks:
  lakes:
    driver: bridge
    ipam:
      config:
        - subnet: "10.5.0.0/24"

volumes:
  lakes-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PATH_DB_DATA}
